{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "resourceName": {
      "type": "string",
      "defaultValue": "keystone",
      "metadata": {
        "description": "Prefix name for all resources to be generated"
      }
    },
    "databaseUser": {
      "type": "string",
      "defaultValue": "keystone",
      "metadata": {
        "description": "Username for the database"
      }
    },
    "databasePassword": {
      "type": "securestring",
      "defaultValue": "adminPassword",
      "metadata": {
        "description": "Password for the database user"
      }
    },
    "databaseVersion": {
      "type": "string",
      "allowedValues": ["9.6", "11"],
      "defaultValue": "11",
      "metadata": {
        "description": "PostgreSQL version"
      }
    },
    "databaseSkuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
        "description": "Azure database for mySQL sku family"
      }
    },
    "databaseSkuCapacity": {
      "type": "int",
      "allowedValues": [2, 4, 8, 16, 32],
      "defaultValue": 2,
      "metadata": {
        "description": "Azure database for PostgreSQL vCores capacity"
      }
    },
    "databaseSkuName": {
      "type": "string",
      "allowedValues": [
        "GP_Gen5_2",
        "GP_Gen5_4",
        "GP_Gen5_8",
        "GP_Gen5_16",
        "GP_Gen5_32",
        "MO_Gen5_2",
        "MO_Gen5_4",
        "MO_Gen5_8",
        "MO_Gen5_16",
        "B_Gen5_1",
        "B_Gen5_2"
      ],
      "defaultValue": "GP_Gen5_2",
      "metadata": {
        "description": "Azure database for PostgreSQL sku name : "
      }
    },
    "databaseSkuSizeMB": {
      "type": "int",
      "defaultValue": 51200,
      "allowedValues": [102400, 51200],
      "metadata": {
        "description": "Azure database for mySQL Sku Size "
      }
    },
    "databaseSkuTier": {
      "type": "string",
      "allowedValues": ["GeneralPurpose", "MemoryOptimized", "Basic"],
      "defaultValue": "GeneralPurpose",
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location for the resources"
      },
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "databaseServerName": "[concat(parameters('resourceName'), '-database')]",
    "webAppName": "[concat(parameters('resourceName'), '-web')]",
    "hostingPlanName": "[concat(parameters('resourceName'), '-service-plan')]",
    "databaseName": "keystone",
    "storageAccountName": "[concat(replace(parameters('resourceName'), '-', ''), 'storage')]",
    "containerName": "keystone-uploads"
  },
  "outputs": {
    "publishProfile": {
      "type": "object",
      "value": "[list(concat('Microsoft.Web/sites/', variables('webAppName') ,'/config/publishingcredentials'), '2020-06-01')]"
    }
  },
  "resources": [
    {
      "name": "[variables('databaseServerName')]",
      "type": "Microsoft.DBforPostgreSQL/servers",
      "apiVersion": "2017-12-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('databaseSkuName')]",
        "tier": "[parameters('databaseSkuTier')]",
        "capacity": "[parameters('databaseSkuCapacity')]",
        "size": "[parameters('databaseSkuSizeMB')]",
        "family": "[parameters('databaseSkuFamily')]"
      },
      "properties": {
        "createMode": "Default",
        "version": "[parameters('databaseVersion')]",
        "administratorLogin": "[parameters('databaseUser')]",
        "administratorLoginPassword": "[parameters('databasePassword')]",
        "storageProfile": {
          "storageMB": "[parameters('databaseSkuSizeMB')]",
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "sslEnforcement": "Disabled"
      },
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "2017-12-01",
          "name": "AllowAzureIPs",
          "location": "[parameters('location')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers/databases', variables('databaseServerName'), variables('databaseName'))]",
            "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('databaseServerName'))]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        },
        {
          "type": "databases",
          "apiVersion": "2017-12-01",
          "name": "[variables('databaseName')]",
          "dependsOn": [
            "[resourceId('Microsoft.DBforPostgreSQL/servers/', variables('databaseServerName'))]"
          ],
          "properties": {
            "charset": "utf8",
            "collation": "English_United States.1252"
          }
        }
      ]
    },
    {
      "name": "[variables('webAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.DBforPostgreSQL/servers/databases', variables('databaseServerName'), variables('databaseName'))]"
      ],
      "properties": {
        "name": "[variables('webAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "NODE|14-lts",
          "appSettings": [
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "SESSION_SECRET",
              "value": "[guid(parameters('resourceName'))]"
            },
            {
              "name": "DATABASE_URL",
              "value": "[concat('postgres://', uriComponent(concat(parameters('databaseUser'), '@', variables('databaseServerName'))), ':', uriComponent(parameters('databasePassword')), '@', variables('databaseServerName'), '.postgres.database.azure.com:5432/', variables('databaseName'))]"
            },
            {
              "name": "AZURE_STORAGE_ACCOUNT",
              "value": "[variables('storageAccountName')]"
            },
            {
              "name": "AZURE_STORAGE_KEY",
              "value": "[listKeys(variables('storageAccountName'), '2019-06-01').keys[0].value]"
            },
            {
              "name": "AZURE_STORAGE_CONTAINER",
              "value": "[variables('containerName')]"
            },
            {
              "name": "NEXTAUTH_URL",
              "value": "[concat('https://', variables('webAppName'), '.azurewebsites.net')]"
            }
          ],
          "clientAffinityEnabled": false,
          "alwaysOn": true
        }
      }
    },
    {
      "name": "[variables('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "location": "[parameters('location')]",
      "kind": "linux",
      "sku": {
        "tier": "Basic",
        "name": "B1",
        "capacity": 1
      },
      "tags": {
        "displayName": "[variables('hostingPlanName')]"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "workerSizeId": "1",
        "reserved": true,
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "2019-06-01",
          "name": "[concat('default/', variables('containerName'))]",
          "dependsOn": ["[variables('storageAccountName')]"],
          "properties": {
            "publicAccess": "Blob"
          }
        }
      ]
    }
  ]
}
